#! /usr/bin/env python
#  -*- coding: utf-8 -*-datetime
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    May 08, 2022 11:28:51 PM +07  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from unicodedata import name
import system
from datetime import datetime
import GUI_support

def changePage(oldpage,newpage):
        oldpage.destroy()
        root = tk.Tk()
        newpage(root)
class Search_page:
        
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])


        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Search Flight")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.combobox = tk.StringVar()

        self.Button_search = tk.Button(self.top)
        self.Button_search.place(relx=0.385, rely=0.778, height=34, width=137)
        self.Button_search.configure(activebackground="#80ff00")
        self.Button_search.configure(activeforeground="#000000")
        self.Button_search.configure(background="#b3ff66")
        self.Button_search.configure(compound='left')
        self.Button_search.configure(disabledforeground="#a3a3a3")
        self.Button_search.configure(foreground="#000000")
        self.Button_search.configure(highlightbackground="#d9d9d9")
        self.Button_search.configure(highlightcolor="black")
        self.Button_search.configure(pady="0")
        self.Button_search.configure(text='''Search''')
        self.Button_search.configure(command=self.SearchFlight)

        self.Label_search = tk.Label(self.top)
        self.Label_search.place(relx=0.269, rely=0.069, height=21, width=264)
        self.Label_search.configure(activebackground="#e4e4e4")
        self.Label_search.configure(activeforeground="black")
        self.Label_search.configure(background="#e4e4e4")
        self.Label_search.configure(compound='left')
        self.Label_search.configure(disabledforeground="#a3a3a3")
        self.Label_search.configure(foreground="#000000")
        self.Label_search.configure(highlightbackground="#d9d9d9")
        self.Label_search.configure(highlightcolor="black")
        self.Label_search.configure(text='''Search Flight''')

        self.Label_depart = tk.Label(self.top)
        self.Label_depart.place(relx=0.25, rely=0.183, height=21, width=284)
        self.Label_depart.configure(activebackground="#e4e4e4")
        self.Label_depart.configure(activeforeground="black")
        self.Label_depart.configure(anchor='w')
        self.Label_depart.configure(background="#e4e4e4")
        self.Label_depart.configure(compound='left')
        self.Label_depart.configure(disabledforeground="#a3a3a3")
        self.Label_depart.configure(foreground="#000000")
        self.Label_depart.configure(highlightbackground="#d9d9d9")
        self.Label_depart.configure(highlightcolor="black")
        self.Label_depart.configure(text='''Depart from''')

        self.Label_fly = tk.Label(self.top)
        self.Label_fly.place(relx=0.25, rely=0.389, height=21, width=284)
        self.Label_fly.configure(activebackground="#e4e4e4")
        self.Label_fly.configure(activeforeground="black")
        self.Label_fly.configure(anchor='w')
        self.Label_fly.configure(background="#e4e4e4")
        self.Label_fly.configure(compound='left')
        self.Label_fly.configure(disabledforeground="#a3a3a3")
        self.Label_fly.configure(foreground="#000000")
        self.Label_fly.configure(highlightbackground="#d9d9d9")
        self.Label_fly.configure(highlightcolor="black")
        self.Label_fly.configure(text='''Fly to''')

        self.Label_date = tk.Label(self.top)
        self.Label_date.place(relx=0.25, rely=0.595, height=21, width=284)
        self.Label_date.configure(activebackground="#e4e4e4")
        self.Label_date.configure(activeforeground="black")
        self.Label_date.configure(anchor='w')
        self.Label_date.configure(background="#e4e4e4")
        self.Label_date.configure(compound='left')
        self.Label_date.configure(disabledforeground="#a3a3a3")
        self.Label_date.configure(foreground="#000000")
        self.Label_date.configure(highlightbackground="#d9d9d9")
        self.Label_date.configure(highlightcolor="black")
        self.Label_date.configure(text='''Date''')

        self.Combobox_depart = ttk.Combobox(self.top)
        self.Combobox_depart.place(relx=0.25, rely=0.252, relheight=0.048
                , relwidth=0.544)
        self.Combobox_depart.configure(textvariable=self.combobox)
        self.Combobox_depart.configure(takefocus="")

        self.Combobox_fly = ttk.Combobox(self.top)
        self.Combobox_fly.place(relx=0.25, rely=0.458, relheight=0.048
                , relwidth=0.544)
        self.Combobox_fly.configure(textvariable=self.combobox)
        self.Combobox_fly.configure(takefocus="")

        self.Entry_date = tk.Entry(self.top)
        self.Entry_date.place(relx=0.25, rely=0.664, height=20, relwidth=0.544)
        self.Entry_date.configure(background="white")
        self.Entry_date.configure(disabledforeground="#a3a3a3")
        self.Entry_date.configure(font="TkFixedFont")
        self.Entry_date.configure(foreground="#000000")
        self.Entry_date.configure(highlightbackground="#d9d9d9")
        self.Entry_date.configure(highlightcolor="black")
        self.Entry_date.configure(insertbackground="black")
        self.Entry_date.configure(selectbackground="blue")
        self.Entry_date.configure(selectforeground="white")

        self.Button_history = tk.Button(self.top)
        self.Button_history.place(relx=0.846, rely=0.046, height=24, width=47)
        self.Button_history.configure(activebackground="#ececec")
        self.Button_history.configure(activeforeground="#000000")
        self.Button_history.configure(background="#d9d9d9")
        self.Button_history.configure(compound='left')
        self.Button_history.configure(disabledforeground="#a3a3a3")
        self.Button_history.configure(foreground="#000000")
        self.Button_history.configure(highlightbackground="#d9d9d9")
        self.Button_history.configure(highlightcolor="black")
        self.Button_history.configure(pady="0")
        self.Button_history.configure(text='''Historyyyy''')

class Flight_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Flights")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Button_back = tk.Button(self.top)
        self.Button_back.place(relx=0.038, rely=0.046, height=24, width=47)
        self.Button_back.configure(activebackground="#ececec")
        self.Button_back.configure(activeforeground="#000000")
        self.Button_back.configure(background="#d9d9d9")
        self.Button_back.configure(compound='left')
        self.Button_back.configure(disabledforeground="#a3a3a3")
        self.Button_back.configure(foreground="#000000")
        self.Button_back.configure(highlightbackground="#d9d9d9")
        self.Button_back.configure(highlightcolor="black")
        self.Button_back.configure(pady="0")
        self.Button_back.configure(text='''BACK''')

        self.Label_depart = tk.Label(self.top)
        self.Label_depart.place(relx=0.096, rely=0.137, height=21, width=84)
        self.Label_depart.configure(activebackground="#f9f9f9")
        self.Label_depart.configure(activeforeground="black")
        self.Label_depart.configure(anchor='w')
        self.Label_depart.configure(background="#e4e4e4")
        self.Label_depart.configure(compound='left')
        self.Label_depart.configure(disabledforeground="#a3a3a3")
        self.Label_depart.configure(foreground="#000000")
        self.Label_depart.configure(highlightbackground="#d9d9d9")
        self.Label_depart.configure(highlightcolor="black")
        self.Label_depart.configure(text='''Depart from''')

        self.Label_origin = tk.Label(self.top)
        self.Label_origin.place(relx=0.25, rely=0.137, height=21, width=34)
        self.Label_origin.configure(activebackground="#e4e4e4")
        self.Label_origin.configure(activeforeground="black")
        self.Label_origin.configure(anchor='w')
        self.Label_origin.configure(background="#e4e4e4")
        self.Label_origin.configure(compound='left')
        self.Label_origin.configure(disabledforeground="#a3a3a3")
        self.Label_origin.configure(foreground="#000000")
        self.Label_origin.configure(highlightbackground="#d9d9d9")
        self.Label_origin.configure(highlightcolor="black")
        self.Label_origin.configure(text='''XXX''')

        self.Label_to = tk.Label(self.top)
        self.Label_to.place(relx=0.327, rely=0.137, height=21, width=64)
        self.Label_to.configure(activebackground="#e4e4e4")
        self.Label_to.configure(activeforeground="black")
        self.Label_to.configure(background="#e4e4e4")
        self.Label_to.configure(compound='left')
        self.Label_to.configure(disabledforeground="#a3a3a3")
        self.Label_to.configure(foreground="#000000")
        self.Label_to.configure(highlightbackground="#d9d9d9")
        self.Label_to.configure(highlightcolor="black")
        self.Label_to.configure(text='''Arrive at''')

        self.Label_destination = tk.Label(self.top)
        self.Label_destination.place(relx=0.462, rely=0.137, height=21, width=34)

        self.Label_destination.configure(activebackground="#e4e4e4")
        self.Label_destination.configure(activeforeground="black")
        self.Label_destination.configure(anchor='w')
        self.Label_destination.configure(background="#e4e4e4")
        self.Label_destination.configure(compound='left')
        self.Label_destination.configure(disabledforeground="#a3a3a3")
        self.Label_destination.configure(foreground="#000000")
        self.Label_destination.configure(highlightbackground="#d9d9d9")
        self.Label_destination.configure(highlightcolor="black")
        self.Label_destination.configure(text='''XXX''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.077, rely=0.206, relheight=0.172
                , relwidth=0.837)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#ffffff")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label_timestart1 = tk.Label(self.Frame1)
        self.Label_timestart1.place(relx=0.092, rely=0.267, height=21, width=35)
        self.Label_timestart1.configure(activebackground="#f9f9f9")
        self.Label_timestart1.configure(activeforeground="black")
        self.Label_timestart1.configure(background="#ffffff")
        self.Label_timestart1.configure(compound='left')
        self.Label_timestart1.configure(disabledforeground="#a3a3a3")
        self.Label_timestart1.configure(foreground="#000000")
        self.Label_timestart1.configure(highlightbackground="#d9d9d9")
        self.Label_timestart1.configure(highlightcolor="black")
        self.Label_timestart1.configure(text='''00:00''')

        self.Label_origin1 = tk.Label(self.Frame1)
        self.Label_origin1.place(relx=0.046, rely=0.533, height=21, width=75)
        self.Label_origin1.configure(activebackground="#f9f9f9")
        self.Label_origin1.configure(activeforeground="black")
        self.Label_origin1.configure(background="#ffffff")
        self.Label_origin1.configure(compound='left')
        self.Label_origin1.configure(disabledforeground="#a3a3a3")
        self.Label_origin1.configure(foreground="#000000")
        self.Label_origin1.configure(highlightbackground="#d9d9d9")
        self.Label_origin1.configure(highlightcolor="black")
        self.Label_origin1.configure(text='''XXX''')

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.23, rely=0.267, height=21, width=35)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''>''')

        self.Label_timearrival1 = tk.Label(self.Frame1)
        self.Label_timearrival1.place(relx=0.368, rely=0.267, height=21
                , width=35)
        self.Label_timearrival1.configure(activebackground="#f9f9f9")
        self.Label_timearrival1.configure(activeforeground="black")
        self.Label_timearrival1.configure(background="#ffffff")
        self.Label_timearrival1.configure(compound='left')
        self.Label_timearrival1.configure(disabledforeground="#a3a3a3")
        self.Label_timearrival1.configure(foreground="#000000")
        self.Label_timearrival1.configure(highlightbackground="#d9d9d9")
        self.Label_timearrival1.configure(highlightcolor="black")
        self.Label_timearrival1.configure(text='''00:00''')

        self.Label_destination1 = tk.Label(self.Frame1)
        self.Label_destination1.place(relx=0.322, rely=0.533, height=21
                , width=75)
        self.Label_destination1.configure(activebackground="#f9f9f9")
        self.Label_destination1.configure(activeforeground="black")
        self.Label_destination1.configure(background="#ffffff")
        self.Label_destination1.configure(compound='left')
        self.Label_destination1.configure(disabledforeground="#a3a3a3")
        self.Label_destination1.configure(foreground="#000000")
        self.Label_destination1.configure(highlightbackground="#d9d9d9")
        self.Label_destination1.configure(highlightcolor="black")
        self.Label_destination1.configure(text='''XXX''')

        self.Button_choose1 = tk.Button(self.Frame1)
        self.Button_choose1.place(relx=0.759, rely=0.267, height=34, width=77)
        self.Button_choose1.configure(activebackground="#80ff00")
        self.Button_choose1.configure(activeforeground="#000000")
        self.Button_choose1.configure(background="#b3ff66")
        self.Button_choose1.configure(compound='left')
        self.Button_choose1.configure(disabledforeground="#a3a3a3")
        self.Button_choose1.configure(foreground="#000000")
        self.Button_choose1.configure(highlightbackground="#d9d9d9")
        self.Button_choose1.configure(highlightcolor="black")
        self.Button_choose1.configure(pady="0")
        self.Button_choose1.configure(text='''CHOOSE''')

        self.Label_price1 = tk.Label(self.Frame1)
        self.Label_price1.place(relx=0.575, rely=0.267, height=21, width=75)
        self.Label_price1.configure(activebackground="#f9f9f9")
        self.Label_price1.configure(activeforeground="black")
        self.Label_price1.configure(background="#ffffff")
        self.Label_price1.configure(compound='left')
        self.Label_price1.configure(disabledforeground="#a3a3a3")
        self.Label_price1.configure(foreground="#000000")
        self.Label_price1.configure(highlightbackground="#d9d9d9")
        self.Label_price1.configure(highlightcolor="black")
        self.Label_price1.configure(text='''0000''')

        self.Label_baht1 = tk.Label(self.Frame1)
        self.Label_baht1.place(relx=0.621, rely=0.533, height=21, width=35)
        self.Label_baht1.configure(activebackground="#f9f9f9")
        self.Label_baht1.configure(activeforeground="black")
        self.Label_baht1.configure(background="#ffffff")
        self.Label_baht1.configure(compound='left')
        self.Label_baht1.configure(disabledforeground="#a3a3a3")
        self.Label_baht1.configure(foreground="#000000")
        self.Label_baht1.configure(highlightbackground="#d9d9d9")
        self.Label_baht1.configure(highlightcolor="black")
        self.Label_baht1.configure(text='''Baht''')

        self.Frame2 = tk.Frame(self.top)
        self.Frame2.place(relx=0.077, rely=0.435, relheight=0.172
                , relwidth=0.837)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#ffffff")
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")

        self.Label_timestart2 = tk.Label(self.Frame2)
        self.Label_timestart2.place(relx=0.092, rely=0.267, height=21, width=35)
        self.Label_timestart2.configure(activebackground="#f9f9f9")
        self.Label_timestart2.configure(activeforeground="black")
        self.Label_timestart2.configure(background="#ffffff")
        self.Label_timestart2.configure(compound='left')
        self.Label_timestart2.configure(disabledforeground="#a3a3a3")
        self.Label_timestart2.configure(foreground="#000000")
        self.Label_timestart2.configure(highlightbackground="#d9d9d9")
        self.Label_timestart2.configure(highlightcolor="black")
        self.Label_timestart2.configure(text='''00:00''')

        self.Label_origin2 = tk.Label(self.Frame2)
        self.Label_origin2.place(relx=0.046, rely=0.533, height=21, width=75)
        self.Label_origin2.configure(activebackground="#f9f9f9")
        self.Label_origin2.configure(activeforeground="black")
        self.Label_origin2.configure(background="#ffffff")
        self.Label_origin2.configure(compound='left')
        self.Label_origin2.configure(disabledforeground="#a3a3a3")
        self.Label_origin2.configure(foreground="#000000")
        self.Label_origin2.configure(highlightbackground="#d9d9d9")
        self.Label_origin2.configure(highlightcolor="black")
        self.Label_origin2.configure(text='''XXX''')

        self.Label1 = tk.Label(self.Frame2)
        self.Label1.place(relx=0.23, rely=0.267, height=21, width=35)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''>''')

        self.Label_timearrival2 = tk.Label(self.Frame2)
        self.Label_timearrival2.place(relx=0.368, rely=0.267, height=21
                , width=35)
        self.Label_timearrival2.configure(activebackground="#f9f9f9")
        self.Label_timearrival2.configure(activeforeground="black")
        self.Label_timearrival2.configure(background="#ffffff")
        self.Label_timearrival2.configure(compound='left')
        self.Label_timearrival2.configure(disabledforeground="#a3a3a3")
        self.Label_timearrival2.configure(foreground="#000000")
        self.Label_timearrival2.configure(highlightbackground="#d9d9d9")
        self.Label_timearrival2.configure(highlightcolor="black")
        self.Label_timearrival2.configure(text='''00:00''')

        self.Label_destination2 = tk.Label(self.Frame2)
        self.Label_destination2.place(relx=0.322, rely=0.533, height=21
                , width=75)
        self.Label_destination2.configure(activebackground="#f9f9f9")
        self.Label_destination2.configure(activeforeground="black")
        self.Label_destination2.configure(background="#ffffff")
        self.Label_destination2.configure(compound='left')
        self.Label_destination2.configure(disabledforeground="#a3a3a3")
        self.Label_destination2.configure(foreground="#000000")
        self.Label_destination2.configure(highlightbackground="#d9d9d9")
        self.Label_destination2.configure(highlightcolor="black")
        self.Label_destination2.configure(text='''XXX''')

        self.Button_choose2 = tk.Button(self.Frame2)
        self.Button_choose2.place(relx=0.759, rely=0.267, height=34, width=77)
        self.Button_choose2.configure(activebackground="#80ff00")
        self.Button_choose2.configure(activeforeground="#000000")
        self.Button_choose2.configure(background="#b3ff66")
        self.Button_choose2.configure(compound='left')
        self.Button_choose2.configure(disabledforeground="#a3a3a3")
        self.Button_choose2.configure(foreground="#000000")
        self.Button_choose2.configure(highlightbackground="#d9d9d9")
        self.Button_choose2.configure(highlightcolor="black")
        self.Button_choose2.configure(pady="0")
        self.Button_choose2.configure(text='''CHOOSE''')

        self.Label_price2 = tk.Label(self.Frame2)
        self.Label_price2.place(relx=0.575, rely=0.267, height=21, width=75)
        self.Label_price2.configure(activebackground="#f9f9f9")
        self.Label_price2.configure(activeforeground="black")
        self.Label_price2.configure(background="#ffffff")
        self.Label_price2.configure(compound='left')
        self.Label_price2.configure(disabledforeground="#a3a3a3")
        self.Label_price2.configure(foreground="#000000")
        self.Label_price2.configure(highlightbackground="#d9d9d9")
        self.Label_price2.configure(highlightcolor="black")
        self.Label_price2.configure(text='''0000''')

        self.Label_baht2 = tk.Label(self.Frame2)
        self.Label_baht2.place(relx=0.621, rely=0.533, height=21, width=35)
        self.Label_baht2.configure(activebackground="#f9f9f9")
        self.Label_baht2.configure(activeforeground="black")
        self.Label_baht2.configure(background="#ffffff")
        self.Label_baht2.configure(compound='left')
        self.Label_baht2.configure(disabledforeground="#a3a3a3")
        self.Label_baht2.configure(foreground="#000000")
        self.Label_baht2.configure(highlightbackground="#d9d9d9")
        self.Label_baht2.configure(highlightcolor="black")
        self.Label_baht2.configure(text='''Baht''')

        self.Frame3 = tk.Frame(self.top)
        self.Frame3.place(relx=0.077, rely=0.664, relheight=0.172
                , relwidth=0.837)
        self.Frame3.configure(relief='groove')
        self.Frame3.configure(borderwidth="2")
        self.Frame3.configure(relief="groove")
        self.Frame3.configure(background="#ffffff")
        self.Frame3.configure(highlightbackground="#d9d9d9")
        self.Frame3.configure(highlightcolor="black")

        self.Label_timestart3 = tk.Label(self.Frame3)
        self.Label_timestart3.place(relx=0.092, rely=0.267, height=21, width=35)
        self.Label_timestart3.configure(activebackground="#f9f9f9")
        self.Label_timestart3.configure(activeforeground="black")
        self.Label_timestart3.configure(background="#ffffff")
        self.Label_timestart3.configure(compound='left')
        self.Label_timestart3.configure(disabledforeground="#a3a3a3")
        self.Label_timestart3.configure(foreground="#000000")
        self.Label_timestart3.configure(highlightbackground="#d9d9d9")
        self.Label_timestart3.configure(highlightcolor="black")
        self.Label_timestart3.configure(text='''00:00''')

        self.Label_origin3 = tk.Label(self.Frame3)
        self.Label_origin3.place(relx=0.046, rely=0.533, height=21, width=75)
        self.Label_origin3.configure(activebackground="#f9f9f9")
        self.Label_origin3.configure(activeforeground="black")
        self.Label_origin3.configure(background="#ffffff")
        self.Label_origin3.configure(compound='left')
        self.Label_origin3.configure(disabledforeground="#a3a3a3")
        self.Label_origin3.configure(foreground="#000000")
        self.Label_origin3.configure(highlightbackground="#d9d9d9")
        self.Label_origin3.configure(highlightcolor="black")
        self.Label_origin3.configure(text='''XXX''')

        self.Label1_1 = tk.Label(self.Frame3)
        self.Label1_1.place(relx=0.23, rely=0.267, height=21, width=35)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(activeforeground="black")
        self.Label1_1.configure(background="#ffffff")
        self.Label1_1.configure(compound='left')
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(foreground="#000000")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''>''')

        self.Label_timearrival3 = tk.Label(self.Frame3)
        self.Label_timearrival3.place(relx=0.368, rely=0.267, height=21
                , width=35)
        self.Label_timearrival3.configure(activebackground="#f9f9f9")
        self.Label_timearrival3.configure(activeforeground="black")
        self.Label_timearrival3.configure(background="#ffffff")
        self.Label_timearrival3.configure(compound='left')
        self.Label_timearrival3.configure(disabledforeground="#a3a3a3")
        self.Label_timearrival3.configure(foreground="#000000")
        self.Label_timearrival3.configure(highlightbackground="#d9d9d9")
        self.Label_timearrival3.configure(highlightcolor="black")
        self.Label_timearrival3.configure(text='''00:00''')

        self.Label_destination3 = tk.Label(self.Frame3)
        self.Label_destination3.place(relx=0.322, rely=0.533, height=21
                , width=75)
        self.Label_destination3.configure(activebackground="#f9f9f9")
        self.Label_destination3.configure(activeforeground="black")
        self.Label_destination3.configure(background="#ffffff")
        self.Label_destination3.configure(compound='left')
        self.Label_destination3.configure(disabledforeground="#a3a3a3")
        self.Label_destination3.configure(foreground="#000000")
        self.Label_destination3.configure(highlightbackground="#d9d9d9")
        self.Label_destination3.configure(highlightcolor="black")
        self.Label_destination3.configure(text='''XXX''')

        self.Button_choose3 = tk.Button(self.Frame3)
        self.Button_choose3.place(relx=0.759, rely=0.267, height=34, width=77)
        self.Button_choose3.configure(activebackground="#80ff00")
        self.Button_choose3.configure(activeforeground="#000000")
        self.Button_choose3.configure(background="#b3ff66")
        self.Button_choose3.configure(compound='left')
        self.Button_choose3.configure(disabledforeground="#a3a3a3")
        self.Button_choose3.configure(foreground="#000000")
        self.Button_choose3.configure(highlightbackground="#d9d9d9")
        self.Button_choose3.configure(highlightcolor="black")
        self.Button_choose3.configure(pady="0")
        self.Button_choose3.configure(text='''CHOOSE''')

        self.Label_price3 = tk.Label(self.Frame3)
        self.Label_price3.place(relx=0.575, rely=0.267, height=21, width=75)
        self.Label_price3.configure(activebackground="#f9f9f9")
        self.Label_price3.configure(activeforeground="black")
        self.Label_price3.configure(background="#ffffff")
        self.Label_price3.configure(compound='left')
        self.Label_price3.configure(disabledforeground="#a3a3a3")
        self.Label_price3.configure(foreground="#000000")
        self.Label_price3.configure(highlightbackground="#d9d9d9")
        self.Label_price3.configure(highlightcolor="black")
        self.Label_price3.configure(text='''0000''')

        self.Label_baht3 = tk.Label(self.Frame3)
        self.Label_baht3.place(relx=0.621, rely=0.533, height=21, width=35)
        self.Label_baht3.configure(activebackground="#f9f9f9")
        self.Label_baht3.configure(activeforeground="black")
        self.Label_baht3.configure(background="#ffffff")
        self.Label_baht3.configure(compound='left')
        self.Label_baht3.configure(disabledforeground="#a3a3a3")
        self.Label_baht3.configure(foreground="#000000")
        self.Label_baht3.configure(highlightbackground="#d9d9d9")
        self.Label_baht3.configure(highlightcolor="black")
        self.Label_baht3.configure(text='''Baht''')

        self.Button_history = tk.Button(self.top)
        self.Button_history.place(relx=0.865, rely=0.046, height=24, width=47)
        self.Button_history.configure(activebackground="#ececec")
        self.Button_history.configure(activeforeground="#000000")
        self.Button_history.configure(background="#d9d9d9")
        self.Button_history.configure(compound='left')
        self.Button_history.configure(disabledforeground="#a3a3a3")
        self.Button_history.configure(foreground="#000000")
        self.Button_history.configure(highlightbackground="#d9d9d9")
        self.Button_history.configure(highlightcolor="black")
        self.Button_history.configure(pady="0")
        self.Button_history.configure(text='''History''')

class Login_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Login")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Label_login = tk.Label(self.top)
        self.Label_login.place(relx=0.192, rely=0.046, height=21, width=314)
        self.Label_login.configure(activebackground="#e4e4e4")
        self.Label_login.configure(activeforeground="black")
        self.Label_login.configure(background="#e4e4e4")
        self.Label_login.configure(compound='left')
        self.Label_login.configure(disabledforeground="#a3a3a3")
        self.Label_login.configure(foreground="#000000")
        self.Label_login.configure(highlightbackground="#d9d9d9")
        self.Label_login.configure(highlightcolor="black")
        self.Label_login.configure(text='''LOGIN''')

        self.Label_user = tk.Label(self.top)
        self.Label_user.place(relx=0.25, rely=0.114, height=21, width=254)
        self.Label_user.configure(activebackground="#e4e4e4")
        self.Label_user.configure(activeforeground="black")
        self.Label_user.configure(anchor='w')
        self.Label_user.configure(background="#e4e4e4")
        self.Label_user.configure(compound='left')
        self.Label_user.configure(disabledforeground="#a3a3a3")
        self.Label_user.configure(foreground="#000000")
        self.Label_user.configure(highlightbackground="#d9d9d9")
        self.Label_user.configure(highlightcolor="black")
        self.Label_user.configure(text='''User Name''')

        self.Label_pass = tk.Label(self.top)
        self.Label_pass.place(relx=0.25, rely=0.274, height=21, width=254)
        self.Label_pass.configure(activebackground="#e4e4e4")
        self.Label_pass.configure(activeforeground="black")
        self.Label_pass.configure(anchor='w')
        self.Label_pass.configure(background="#e4e4e4")
        self.Label_pass.configure(compound='left')
        self.Label_pass.configure(disabledforeground="#a3a3a3")
        self.Label_pass.configure(foreground="#000000")
        self.Label_pass.configure(highlightbackground="#d9d9d9")
        self.Label_pass.configure(highlightcolor="black")
        self.Label_pass.configure(text='''Password''')

        self.Button_login = tk.Button(self.top)
        self.Button_login.place(relx=0.365, rely=0.436, height=34, width=127)
        self.Button_login.configure(activebackground="#2c62b4")
        self.Button_login.configure(activeforeground="white")
        self.Button_login.configure(activeforeground="#ffffff")
        self.Button_login.configure(background="#0080ff")
        self.Button_login.configure(compound='left')
        self.Button_login.configure(disabledforeground="#a3a3a3")
        self.Button_login.configure(foreground="#ffffff")
        self.Button_login.configure(highlightbackground="#0080ff")
        self.Button_login.configure(highlightcolor="#000000")
        self.Button_login.configure(pady="0")
        self.Button_login.configure(text='''LOGIN''')

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.404, rely=0.619, height=24, width=87)
        self.Button1.configure(activebackground="#00ff40")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#b3ff66")
        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''REGISTER''')

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.288, rely=0.548, height=21, width=214)
        self.Label1.configure(activebackground="#e4e4e4")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#e4e4e4")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''--------------------------------------''')

        self.Entry_user = tk.Entry(self.top)
        self.Entry_user.place(relx=0.25, rely=0.183, height=20, relwidth=0.488)
        self.Entry_user.configure(background="white")
        self.Entry_user.configure(disabledforeground="#a3a3a3")
        self.Entry_user.configure(font="TkFixedFont")
        self.Entry_user.configure(foreground="#000000")
        self.Entry_user.configure(highlightbackground="#d9d9d9")
        self.Entry_user.configure(highlightcolor="black")
        self.Entry_user.configure(insertbackground="black")
        self.Entry_user.configure(selectbackground="blue")
        self.Entry_user.configure(selectforeground="white")

        self.Entry_pass = tk.Entry(self.top)
        self.Entry_pass.place(relx=0.25, rely=0.342, height=20, relwidth=0.488)
        self.Entry_pass.configure(background="white")
        self.Entry_pass.configure(disabledforeground="#a3a3a3")
        self.Entry_pass.configure(font="TkFixedFont")
        self.Entry_pass.configure(foreground="#000000")
        self.Entry_pass.configure(highlightbackground="#d9d9d9")
        self.Entry_pass.configure(highlightcolor="black")
        self.Entry_pass.configure(insertbackground="black")
        self.Entry_pass.configure(selectbackground="blue")
        self.Entry_pass.configure(selectforeground="white")

class Register_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Register")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Label_register = tk.Label(self.top)
        self.Label_register.place(relx=0.212, rely=0.046, height=21, width=300)
        self.Label_register.configure(activebackground="#e4e4e4")
        self.Label_register.configure(activeforeground="black")
        self.Label_register.configure(background="#e4e4e4")
        self.Label_register.configure(compound='left')
        self.Label_register.configure(disabledforeground="#a3a3a3")
        self.Label_register.configure(foreground="#000000")
        self.Label_register.configure(highlightbackground="#d9d9d9")
        self.Label_register.configure(highlightcolor="black")
        self.Label_register.configure(text='''Register''')

        self.Label_ID = tk.Label(self.top)
        self.Label_ID.place(relx=0.212, rely=0.137, height=21, width=134)
        self.Label_ID.configure(activebackground="#e4e4e4")
        self.Label_ID.configure(activeforeground="black")
        self.Label_ID.configure(anchor='w')
        self.Label_ID.configure(background="#e4e4e4")
        self.Label_ID.configure(compound='left')
        self.Label_ID.configure(disabledforeground="#a3a3a3")
        self.Label_ID.configure(foreground="#000000")
        self.Label_ID.configure(highlightbackground="#d9d9d9")
        self.Label_ID.configure(highlightcolor="black")
        self.Label_ID.configure(text='''ID Card''')

        self.Label_phone = tk.Label(self.top)
        self.Label_phone.place(relx=0.519, rely=0.137, height=21, width=134)
        self.Label_phone.configure(activebackground="#e4e4e4")
        self.Label_phone.configure(activeforeground="black")
        self.Label_phone.configure(anchor='w')
        self.Label_phone.configure(background="#e4e4e4")
        self.Label_phone.configure(compound='left')
        self.Label_phone.configure(disabledforeground="#a3a3a3")
        self.Label_phone.configure(foreground="#000000")
        self.Label_phone.configure(highlightbackground="#d9d9d9")
        self.Label_phone.configure(highlightcolor="black")
        self.Label_phone.configure(text='''Phone Number''')

        self.Label_user = tk.Label(self.top)
        self.Label_user.place(relx=0.212, rely=0.297, height=21, width=294)
        self.Label_user.configure(activebackground="#e4e4e4")
        self.Label_user.configure(activeforeground="black")
        self.Label_user.configure(anchor='w')
        self.Label_user.configure(background="#e4e4e4")
        self.Label_user.configure(compound='left')
        self.Label_user.configure(disabledforeground="#a3a3a3")
        self.Label_user.configure(foreground="#000000")
        self.Label_user.configure(highlightbackground="#d9d9d9")
        self.Label_user.configure(highlightcolor="black")
        self.Label_user.configure(text='''User Name''')

        self.Label_pass = tk.Label(self.top)
        self.Label_pass.place(relx=0.212, rely=0.458, height=21, width=294)
        self.Label_pass.configure(activebackground="#e4e4e4")
        self.Label_pass.configure(activeforeground="black")
        self.Label_pass.configure(anchor='w')
        self.Label_pass.configure(background="#e4e4e4")
        self.Label_pass.configure(compound='left')
        self.Label_pass.configure(disabledforeground="#a3a3a3")
        self.Label_pass.configure(foreground="#000000")
        self.Label_pass.configure(highlightbackground="#d9d9d9")
        self.Label_pass.configure(highlightcolor="black")
        self.Label_pass.configure(text='''Password''')

        self.Label_repass = tk.Label(self.top)
        self.Label_repass.place(relx=0.212, rely=0.618, height=21, width=294)
        self.Label_repass.configure(activebackground="#e4e4e4")
        self.Label_repass.configure(activeforeground="black")
        self.Label_repass.configure(anchor='w')
        self.Label_repass.configure(background="#e4e4e4")
        self.Label_repass.configure(compound='left')
        self.Label_repass.configure(disabledforeground="#a3a3a3")
        self.Label_repass.configure(foreground="#000000")
        self.Label_repass.configure(highlightbackground="#d9d9d9")
        self.Label_repass.configure(highlightcolor="black")
        self.Label_repass.configure(text='''Confirm Password''')

        self.Button_register = tk.Button(self.top)
        self.Button_register.place(relx=0.327, rely=0.778, height=34, width=197)
        self.Button_register.configure(activebackground="#00ff40")
        self.Button_register.configure(activeforeground="#000000")
        self.Button_register.configure(background="#b3ff66")
        self.Button_register.configure(compound='left')
        self.Button_register.configure(disabledforeground="#a3a3a3")
        self.Button_register.configure(foreground="#000000")
        self.Button_register.configure(highlightbackground="#d9d9d9")
        self.Button_register.configure(highlightcolor="black")
        self.Button_register.configure(pady="0")
        self.Button_register.configure(text='''REGISTER''')

        self.Button_back = tk.Button(self.top)
        self.Button_back.place(relx=0.038, rely=0.046, height=24, width=47)
        self.Button_back.configure(activebackground="#ececec")
        self.Button_back.configure(activeforeground="#000000")
        self.Button_back.configure(background="#d9d9d9")
        self.Button_back.configure(compound='left')
        self.Button_back.configure(disabledforeground="#a3a3a3")
        self.Button_back.configure(foreground="#000000")
        self.Button_back.configure(highlightbackground="#d9d9d9")
        self.Button_back.configure(highlightcolor="black")
        self.Button_back.configure(pady="0")
        self.Button_back.configure(text='''BACK''')

        self.Entry_ID = tk.Entry(self.top)
        self.Entry_ID.place(relx=0.212, rely=0.195, height=20, relwidth=0.269)
        self.Entry_ID.configure(background="white")
        self.Entry_ID.configure(disabledforeground="#a3a3a3")
        self.Entry_ID.configure(font="TkFixedFont")
        self.Entry_ID.configure(foreground="#000000")
        self.Entry_ID.configure(highlightbackground="#d9d9d9")
        self.Entry_ID.configure(highlightcolor="black")
        self.Entry_ID.configure(insertbackground="black")
        self.Entry_ID.configure(selectbackground="blue")
        self.Entry_ID.configure(selectforeground="white")

        self.Entry_phone = tk.Entry(self.top)
        self.Entry_phone.place(relx=0.519, rely=0.195, height=20, relwidth=0.269)

        self.Entry_phone.configure(background="white")
        self.Entry_phone.configure(disabledforeground="#a3a3a3")
        self.Entry_phone.configure(font="TkFixedFont")
        self.Entry_phone.configure(foreground="#000000")
        self.Entry_phone.configure(highlightbackground="#d9d9d9")
        self.Entry_phone.configure(highlightcolor="black")
        self.Entry_phone.configure(insertbackground="black")
        self.Entry_phone.configure(selectbackground="blue")
        self.Entry_phone.configure(selectforeground="white")

        self.Entry_user = tk.Entry(self.top)
        self.Entry_user.place(relx=0.212, rely=0.355, height=20, relwidth=0.577)
        self.Entry_user.configure(background="white")
        self.Entry_user.configure(disabledforeground="#a3a3a3")
        self.Entry_user.configure(font="TkFixedFont")
        self.Entry_user.configure(foreground="#000000")
        self.Entry_user.configure(highlightbackground="#d9d9d9")
        self.Entry_user.configure(highlightcolor="black")
        self.Entry_user.configure(insertbackground="black")
        self.Entry_user.configure(selectbackground="blue")
        self.Entry_user.configure(selectforeground="white")

        self.Entry_pass = tk.Entry(self.top)
        self.Entry_pass.place(relx=0.212, rely=0.515, height=20, relwidth=0.577)
        self.Entry_pass.configure(background="white")
        self.Entry_pass.configure(disabledforeground="#a3a3a3")
        self.Entry_pass.configure(font="TkFixedFont")
        self.Entry_pass.configure(foreground="#000000")
        self.Entry_pass.configure(highlightbackground="#d9d9d9")
        self.Entry_pass.configure(highlightcolor="black")
        self.Entry_pass.configure(insertbackground="black")
        self.Entry_pass.configure(selectbackground="blue")
        self.Entry_pass.configure(selectforeground="white")

        self.Entry_repass = tk.Entry(self.top)
        self.Entry_repass.place(relx=0.212, rely=0.675, height=20
                , relwidth=0.577)
        self.Entry_repass.configure(background="white")
        self.Entry_repass.configure(disabledforeground="#a3a3a3")
        self.Entry_repass.configure(font="TkFixedFont")
        self.Entry_repass.configure(foreground="#000000")
        self.Entry_repass.configure(highlightbackground="#d9d9d9")
        self.Entry_repass.configure(highlightcolor="black")
        self.Entry_repass.configure(insertbackground="black")
        self.Entry_repass.configure(selectbackground="blue")
        self.Entry_repass.configure(selectforeground="white")

class Book_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Booking")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Button_back = tk.Button(self.top)
        self.Button_back.place(relx=0.038, rely=0.046, height=24, width=47)
        self.Button_back.configure(activebackground="#ececec")
        self.Button_back.configure(activeforeground="#000000")
        self.Button_back.configure(background="#d9d9d9")
        self.Button_back.configure(compound='left')
        self.Button_back.configure(disabledforeground="#a3a3a3")
        self.Button_back.configure(foreground="#000000")
        self.Button_back.configure(highlightbackground="#d9d9d9")
        self.Button_back.configure(highlightcolor="black")
        self.Button_back.configure(pady="0")
        self.Button_back.configure(text='''BACK''')
        self.Button_back.configure(command=self.back)

        self.Button_book = tk.Button(self.top)
        self.Button_book.place(relx=0.635, rely=0.206, height=44, width=97)
        self.Button_book.configure(activebackground="#00ff40")
        self.Button_book.configure(activeforeground="#000000")
        self.Button_book.configure(background="#b3ff66")
        self.Button_book.configure(compound='left')
        self.Button_book.configure(disabledforeground="#a3a3a3")
        self.Button_book.configure(foreground="#000000")
        self.Button_book.configure(highlightbackground="#d9d9d9")
        self.Button_book.configure(highlightcolor="black")
        self.Button_book.configure(pady="0")
        self.Button_book.configure(text='''BOOK''')
        waitflightid = '01-HDY'
        a = system.Flight.getFlightById(waitflightid)['name']
        waitsource = "Bankok"
        waituserid = '1'
        self.Button_book.configure(command=(system.Book_Flight.book(waitsource,a,waitflightid,waituserid,'pending') and self.payment))

        self.Label_details = tk.Label(self.top)
        self.Label_details.place(relx=0.192, rely=0.092, height=23, width=334)
        self.Label_details.configure(activebackground="#f9f9f9")
        self.Label_details.configure(activeforeground="black")
        self.Label_details.configure(background="#e4e4e4")
        self.Label_details.configure(compound='left')
        self.Label_details.configure(disabledforeground="#a3a3a3")
        self.Label_details.configure(foreground="#000000")
        self.Label_details.configure(highlightbackground="#d9d9d9")
        self.Label_details.configure(highlightcolor="black")
        self.Label_details.configure(text='''Flight details''')

        self.Label_due = tk.Label(self.top)
        self.Label_due.place(relx=0.173, rely=0.275, height=23, width=34)
        self.Label_due.configure(activebackground="#f9f9f9")
        self.Label_due.configure(activeforeground="black")
        self.Label_due.configure(anchor='w')
        self.Label_due.configure(background="#e4e4e4")
        self.Label_due.configure(compound='left')
        self.Label_due.configure(disabledforeground="#a3a3a3")
        self.Label_due.configure(foreground="#000000")
        self.Label_due.configure(highlightbackground="#d9d9d9")
        self.Label_due.configure(highlightcolor="black")
        self.Label_due.configure(text='''Date :''')

        self.Label_date = tk.Label(self.top)
        self.Label_date.place(relx=0.240, rely=0.275, height=23, width=74)
        self.Label_date.configure(activebackground="#f9f9f9")
        self.Label_date.configure(activeforeground="black")
        self.Label_date.configure(anchor='w')
        self.Label_date.configure(background="#e4e4e4")
        self.Label_date.configure(compound='left')
        self.Label_date.configure(disabledforeground="#a3a3a3")
        self.Label_date.configure(foreground="#000000")
        self.Label_date.configure(highlightbackground="#d9d9d9")
        self.Label_date.configure(highlightcolor="black")
        waittime ="10/05/22"
        self.Label_date.configure(text=waittime)

        self.Label_baht = tk.Label(self.top)
        self.Label_baht.place(relx=0.173, rely=0.206, height=23, width=74)
        self.Label_baht.configure(activebackground="#f9f9f9")
        self.Label_baht.configure(activeforeground="black")
        self.Label_baht.configure(anchor='w')
        self.Label_baht.configure(background="#e4e4e4")
        self.Label_baht.configure(compound='left')
        self.Label_baht.configure(disabledforeground="#a3a3a3")
        self.Label_baht.configure(foreground="#000000")
        self.Label_baht.configure(highlightbackground="#d9d9d9")
        self.Label_baht.configure(highlightcolor="black")
        self.Label_baht.configure(text='''Price/Baht :''')

        self.Label_price = tk.Label(self.top)
        self.Label_price.place(relx=0.300, rely=0.206, height=23, width=74)
        self.Label_price.configure(activebackground="#f9f9f9")
        self.Label_price.configure(activeforeground="black")
        self.Label_price.configure(anchor='w')
        self.Label_price.configure(background="#e4e4e4")
        self.Label_price.configure(compound='left')
        self.Label_price.configure(disabledforeground="#a3a3a3")
        self.Label_price.configure(foreground="#000000")
        self.Label_price.configure(highlightbackground="#d9d9d9")
        self.Label_price.configure(highlightcolor="black")
        self.Label_price.configure(text=system.Flight.getFlightById(waitflightid)['price'])

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.173, rely=0.342, relheight=0.471
                , relwidth=0.663)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label2_1 = tk.Label(self.Frame1)
        self.Label2_1.place(relx=0.148, rely=0.286, height=40, width=242)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(compound='left')
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''o-----------------------------------> o''')

        self.Label_timestart = tk.Label(self.Frame1)
        self.Label_timestart.place(relx=0.116, rely=0.487, height=28, width=50)
        self.Label_timestart.configure(activebackground="#f9f9f9")
        self.Label_timestart.configure(activeforeground="black")
        self.Label_timestart.configure(background="#d9d9d9")
        self.Label_timestart.configure(compound='left')
        self.Label_timestart.configure(disabledforeground="#a3a3a3")
        self.Label_timestart.configure(foreground="#000000")
        self.Label_timestart.configure(highlightbackground="#d9d9d9")
        self.Label_timestart.configure(highlightcolor="black")
        self.Label_timestart.configure(text=system.Flight.getFlightById(waitflightid)['start'])

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.232, rely=0.098, height=23, width=174)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#808080")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Total trip duration''')

        self.Label_origin = tk.Label(self.Frame1)
        self.Label_origin.place(relx=0.058, rely=0.634, height=23, width=90)
        self.Label_origin.configure(activebackground="#f9f9f9")
        self.Label_origin.configure(activeforeground="black")
        self.Label_origin.configure(background="#d9d9d9")
        self.Label_origin.configure(compound='left')
        self.Label_origin.configure(disabledforeground="#a3a3a3")
        self.Label_origin.configure(foreground="#000000")
        self.Label_origin.configure(highlightbackground="#d9d9d9")
        self.Label_origin.configure(highlightcolor="black")
        self.Label_origin.configure(text=waitsource)

        self.Label_timearrival = tk.Label(self.Frame1)
        self.Label_timearrival.place(relx=0.696, rely=0.487, height=23, width=50)

        self.Label_timearrival.configure(activebackground="#f9f9f9")
        self.Label_timearrival.configure(activeforeground="black")
        self.Label_timearrival.configure(background="#d9d9d9")
        self.Label_timearrival.configure(compound='left')
        self.Label_timearrival.configure(disabledforeground="#a3a3a3")
        self.Label_timearrival.configure(foreground="#000000")
        self.Label_timearrival.configure(highlightbackground="#d9d9d9")
        self.Label_timearrival.configure(highlightcolor="black")
        self.Label_timearrival.configure(text=system.Flight.getFlightById(waitflightid)['end'])

        self.Label_destination = tk.Label(self.Frame1)
        self.Label_destination.place(relx=0.638, rely=0.634, height=23, width=90)

        self.Label_destination.configure(activebackground="#f9f9f9")
        self.Label_destination.configure(activeforeground="black")
        self.Label_destination.configure(background="#d9d9d9")
        self.Label_destination.configure(compound='left')
        self.Label_destination.configure(disabledforeground="#a3a3a3")
        self.Label_destination.configure(foreground="#000000")
        self.Label_destination.configure(highlightbackground="#d9d9d9")
        self.Label_destination.configure(highlightcolor="black")
        self.Label_destination.configure(text=system.Flight.getFlightById(waitflightid)['name'])

        self.Label_timeduration = tk.Label(self.Frame1)
        self.Label_timeduration.place(relx=0.232, rely=0.196, height=23
                , width=174)
        self.Label_timeduration.configure(activebackground="#f9f9f9")
        self.Label_timeduration.configure(activeforeground="black")
        self.Label_timeduration.configure(background="#d9d9d9")
        self.Label_timeduration.configure(compound='left')
        self.Label_timeduration.configure(disabledforeground="#a3a3a3")
        self.Label_timeduration.configure(foreground="#000000")
        self.Label_timeduration.configure(highlightbackground="#d9d9d9")
        self.Label_timeduration.configure(highlightcolor="black")
        t1 = datetime.strptime(system.Flight.getFlightById(waitflightid)['start'],'%H:%M')
        t2 = datetime.strptime(system.Flight.getFlightById(waitflightid)['end'],'%H:%M')
        time = (t2-t1)
        time = str(time)
        datem = datetime.strptime(time,"%H:%M:%S")
        time = datem.hour,"hour",datem.minute,"minute"
        # print (type(time))
        self.Label_timeduration.configure(text=time)

        # self.Button_history = tk.Button(self.top)
        # self.Button_history.place(relx=0.865, rely=0.046, height=24, width=47)
        # self.Button_history.configure(activebackground="#ececec")
        # self.Button_history.configure(activeforeground="#000000")
        # self.Button_history.configure(background="#d9d9d9")
        # self.Button_history.configure(compound='left')
        # self.Button_history.configure(disabledforeground="#a3a3a3")
        # self.Button_history.configure(foreground="#000000")
        # self.Button_history.configure(highlightbackground="#d9d9d9")
        # self.Button_history.configure(highlightcolor="black")
        # self.Button_history.configure(pady="0")
        # self.Button_history.configure(text='''History''')
        # self.Button_history.configure(command=self.history)
    def payment(self):
        changePage(self.top,Payment_page)
    def history(self):
        changePage(self.top,History_page)
    def back(self):
        changePage(self.top,Flight_page)

class Payment_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Payment")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Button_cancel = tk.Button(self.top)
        self.Button_cancel.place(relx=0.243, rely=0.714, height=34, width=77)
        self.Button_cancel.configure(activebackground="#ececec")
        self.Button_cancel.configure(activeforeground="#000000")
        self.Button_cancel.configure(background="#d9d9d9")
        self.Button_cancel.configure(compound='left')
        self.Button_cancel.configure(disabledforeground="#a3a3a3")
        self.Button_cancel.configure(foreground="#000000")
        self.Button_cancel.configure(highlightbackground="#d9d9d9")
        self.Button_cancel.configure(highlightcolor="black")
        self.Button_cancel.configure(pady="0")
        self.Button_cancel.configure(text='''Cancel''')

        self.Button_confirm = tk.Button(self.top)
        self.Button_confirm.place(relx=0.539, rely=0.714, height=34, width=77)
        self.Button_confirm.configure(activebackground="#ececec")
        self.Button_confirm.configure(activeforeground="#000000")
        self.Button_confirm.configure(background="#b3ff66")
        self.Button_confirm.configure(compound='left')
        self.Button_confirm.configure(disabledforeground="#a3a3a3")
        self.Button_confirm.configure(foreground="#000000")
        self.Button_confirm.configure(highlightbackground="#d9d9d9")
        self.Button_confirm.configure(highlightcolor="black")
        self.Button_confirm.configure(pady="0")
        self.Button_confirm.configure(text='''Confirm''')

        self.Label_payment = tk.Label(self.top)
        self.Label_payment.place(relx=0.216, rely=0.055, height=17, width=218)
        self.Label_payment.configure(activebackground="#f9f9f9")
        self.Label_payment.configure(activeforeground="black")
        self.Label_payment.configure(background="#e4e4e4")
        self.Label_payment.configure(compound='left')
        self.Label_payment.configure(disabledforeground="#a3a3a3")
        self.Label_payment.configure(foreground="#000000")
        self.Label_payment.configure(highlightbackground="#d9d9d9")
        self.Label_payment.configure(highlightcolor="black")
        self.Label_payment.configure(text='''Payment''')

        self.Label_origin = tk.Label(self.top)
        self.Label_origin.place(relx=0.485, rely=0.412, height=18, width=250)
        self.Label_origin.configure(activebackground="#f9f9f9")
        self.Label_origin.configure(activeforeground="black")
        self.Label_origin.configure(anchor='w')
        self.Label_origin.configure(background="#e4e4e4")
        self.Label_origin.configure(compound='left')
        self.Label_origin.configure(disabledforeground="#a3a3a3")
        self.Label_origin.configure(foreground="#000000")
        self.Label_origin.configure(highlightbackground="#d9d9d9")
        self.Label_origin.configure(highlightcolor="black")
        waitbooktid = system.Book_Flight.getAllBookData()
        self.Label_origin.configure(text=system.Book_Flight.getBookDetailById(waitbooktid)['Source'])

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.593, rely=0.412, height=17, width=24)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#e4e4e4")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''>''')

        self.Label_destination = tk.Label(self.top)
        self.Label_destination.place(relx=0.674, rely=0.412, height=17, width=250)

        self.Label_destination.configure(activebackground="#f9f9f9")
        self.Label_destination.configure(activeforeground="black")
        self.Label_destination.configure(anchor='w')
        self.Label_destination.configure(background="#e4e4e4")
        self.Label_destination.configure(compound='left')
        self.Label_destination.configure(disabledforeground="#a3a3a3")
        self.Label_destination.configure(foreground="#000000")
        self.Label_destination.configure(highlightbackground="#d9d9d9")
        self.Label_destination.configure(highlightcolor="black")
        self.Label_destination.configure(text=system.Book_Flight.getBookDetailById(waitbooktid)['Destination'])

        self.Label_depart = tk.Label(self.top)
        self.Label_depart.place(relx=0.243, rely=0.412, height=17, width=75)
        self.Label_depart.configure(activebackground="#f9f9f9")
        self.Label_depart.configure(activeforeground="black")
        self.Label_depart.configure(anchor='e')
        self.Label_depart.configure(background="#e4e4e4")
        self.Label_depart.configure(compound='left')
        self.Label_depart.configure(disabledforeground="#a3a3a3")
        self.Label_depart.configure(foreground="#000000")
        self.Label_depart.configure(highlightbackground="#d9d9d9")
        self.Label_depart.configure(highlightcolor="black")
        self.Label_depart.configure(text='''Departure :''')

        self.Label_total = tk.Label(self.top)
        self.Label_total.place(relx=0.243, rely=0.522, height=17, width=75)
        self.Label_total.configure(activebackground="#f9f9f9")
        self.Label_total.configure(activeforeground="black")
        self.Label_total.configure(anchor='e')
        self.Label_total.configure(background="#e4e4e4")
        self.Label_total.configure(compound='left')
        self.Label_total.configure(disabledforeground="#a3a3a3")
        self.Label_total.configure(foreground="#000000")
        self.Label_total.configure(highlightbackground="#d9d9d9")
        self.Label_total.configure(highlightcolor="black")
        self.Label_total.configure(text='''Total :''')

        self.Label_price = tk.Label(self.top)
        self.Label_price.place(relx=0.485, rely=0.522, height=17, width=63)
        self.Label_price.configure(activebackground="#f9f9f9")
        self.Label_price.configure(activeforeground="black")
        self.Label_price.configure(anchor='w')
        self.Label_price.configure(background="#e4e4e4")
        self.Label_price.configure(compound='left')
        self.Label_price.configure(disabledforeground="#a3a3a3")
        self.Label_price.configure(foreground="#000000")
        self.Label_price.configure(highlightbackground="#d9d9d9")
        self.Label_price.configure(highlightcolor="black")
        Flight_ID = system.Book_Flight.getBookDetailById(waitbooktid)['Flight_ID']
        self.Label_price.configure(text=system.Flight.getFlightById(Flight_ID)['price'])

        self.Label_name = tk.Label(self.top)
        self.Label_name.place(relx=0.243, rely=0.192, height=17, width=75)
        self.Label_name.configure(activebackground="#f9f9f9")
        self.Label_name.configure(activeforeground="black")
        self.Label_name.configure(anchor='e')
        self.Label_name.configure(background="#e4e4e4")
        self.Label_name.configure(compound='left')
        self.Label_name.configure(disabledforeground="#a3a3a3")
        self.Label_name.configure(foreground="#000000")
        self.Label_name.configure(highlightbackground="#d9d9d9")
        self.Label_name.configure(highlightcolor="black")
        self.Label_name.configure(text='''User Name :''')

        self.Label_card = tk.Label(self.top)
        self.Label_card.place(relx=0.243, rely=0.302, height=17, width=75)
        self.Label_card.configure(activebackground="#f9f9f9")
        self.Label_card.configure(activeforeground="black")
        self.Label_card.configure(anchor='e')
        self.Label_card.configure(background="#e4e4e4")
        self.Label_card.configure(compound='left')
        self.Label_card.configure(disabledforeground="#a3a3a3")
        self.Label_card.configure(foreground="#000000")
        self.Label_card.configure(highlightbackground="#d9d9d9")
        self.Label_card.configure(highlightcolor="black")
        self.Label_card.configure(text='''ID Card :''')

        self.Label_ID = tk.Label(self.top)
        self.Label_ID.place(relx=0.485, rely=0.302, height=18, width=82)
        self.Label_ID.configure(activebackground="#f9f9f9")
        self.Label_ID.configure(activeforeground="black")
        self.Label_ID.configure(anchor='w')
        self.Label_ID.configure(background="#e4e4e4")
        self.Label_ID.configure(compound='left')
        self.Label_ID.configure(disabledforeground="#a3a3a3")
        self.Label_ID.configure(foreground="#000000")
        self.Label_ID.configure(highlightbackground="#d9d9d9")
        self.Label_ID.configure(highlightcolor="black")
        waiteruserid = system.Book_Flight.getBookDetailById(waitbooktid)['User_ID']
        self.Label_ID.configure(text=system.User.getUserById(waiteruserid)['id_card'])

        self.Label_user = tk.Label(self.top)
        self.Label_user.place(relx=0.485, rely=0.192, height=17, width=81)
        self.Label_user.configure(activebackground="#f9f9f9")
        self.Label_user.configure(activeforeground="black")
        self.Label_user.configure(anchor='w')
        self.Label_user.configure(background="#e4e4e4")
        self.Label_user.configure(compound='left')
        self.Label_user.configure(disabledforeground="#a3a3a3")
        self.Label_user.configure(foreground="#000000")
        self.Label_user.configure(highlightbackground="#d9d9d9")
        self.Label_user.configure(highlightcolor="black")
        self.Label_user.configure(text=system.User.getUserById(waiteruserid)['username'])

        self.Label_baht = tk.Label(self.top)
        self.Label_baht.place(relx=0.674, rely=0.522, height=17, width=54)
        self.Label_baht.configure(activebackground="#f9f9f9")
        self.Label_baht.configure(activeforeground="black")
        self.Label_baht.configure(anchor='w')
        self.Label_baht.configure(background="#e4e4e4")
        self.Label_baht.configure(compound='left')
        self.Label_baht.configure(disabledforeground="#a3a3a3")
        self.Label_baht.configure(foreground="#000000")
        self.Label_baht.configure(highlightbackground="#d9d9d9")
        self.Label_baht.configure(highlightcolor="black")
        self.Label_baht.configure(text='''Baht''')

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.054, rely=0.11, height=21, width=334)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#e4e4e4")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''--------------------------------------------------------''')

        self.Label2_2 = tk.Label(self.top)
        self.Label2_2.place(relx=0.054, rely=0.604, height=21, width=334)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(activeforeground="black")
        self.Label2_2.configure(background="#e4e4e4")
        self.Label2_2.configure(compound='left')
        self.Label2_2.configure(disabledforeground="#a3a3a3")
        self.Label2_2.configure(foreground="#000000")
        self.Label2_2.configure(highlightbackground="#d9d9d9")
        self.Label2_2.configure(highlightcolor="black")
        self.Label2_2.configure(text='''--------------------------------------------------------''')
class History_page:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        screen_width = top.winfo_screenwidth()
        screen_height = top.winfo_screenheight()
        x_cordinate = int((screen_width/2) - (520/2))
        y_cordinate = int((screen_height/2) - (437/2))
        
        top.geometry(f"520x437+{x_cordinate}+{y_cordinate}")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("History")
        top.configure(background="#e4e4e4")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.096, rely=0.137, height=21, width=164)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#e4e4e4")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Information''')

        self.Button_back = tk.Button(self.top)
        self.Button_back.place(relx=0.038, rely=0.046, height=24, width=47)
        self.Button_back.configure(activebackground="#ececec")
        self.Button_back.configure(activeforeground="#000000")
        self.Button_back.configure(background="#d9d9d9")
        self.Button_back.configure(compound='left')
        self.Button_back.configure(disabledforeground="#a3a3a3")
        self.Button_back.configure(foreground="#000000")
        self.Button_back.configure(highlightbackground="#d9d9d9")
        self.Button_back.configure(highlightcolor="black")
        self.Button_back.configure(pady="0")
        self.Button_back.configure(text='''BACK''')

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.538, rely=0.137, height=21, width=44)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#e4e4e4")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Price''')

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.788, rely=0.137, height=21, width=44)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#e4e4e4")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Status''')

        self.Label_departure1 = tk.Label(self.top)
        self.Label_departure1.place(relx=0.096, rely=0.229, height=21, width=84)
        self.Label_departure1.configure(activebackground="#f9f9f9")
        self.Label_departure1.configure(activeforeground="black")
        self.Label_departure1.configure(anchor='w')
        self.Label_departure1.configure(background="#e4e4e4")
        self.Label_departure1.configure(compound='left')
        self.Label_departure1.configure(disabledforeground="#a3a3a3")
        self.Label_departure1.configure(foreground="#000000")
        self.Label_departure1.configure(highlightbackground="#d9d9d9")
        self.Label_departure1.configure(highlightcolor="black")
        self.Label_departure1.configure(text='''XXX > XXX''')

        self.Label_price1 = tk.Label(self.top)
        self.Label_price1.place(relx=0.538, rely=0.229, height=21, width=44)
        self.Label_price1.configure(activebackground="#f9f9f9")
        self.Label_price1.configure(activeforeground="black")
        self.Label_price1.configure(background="#e4e4e4")
        self.Label_price1.configure(compound='left')
        self.Label_price1.configure(disabledforeground="#a3a3a3")
        self.Label_price1.configure(foreground="#000000")
        self.Label_price1.configure(highlightbackground="#d9d9d9")
        self.Label_price1.configure(highlightcolor="black")
        self.Label_price1.configure(text='''0000''')

        self.Label_departure2 = tk.Label(self.top)
        self.Label_departure2.place(relx=0.096, rely=0.32, height=21, width=84)
        self.Label_departure2.configure(activebackground="#f9f9f9")
        self.Label_departure2.configure(activeforeground="black")
        self.Label_departure2.configure(anchor='w')
        self.Label_departure2.configure(background="#e4e4e4")
        self.Label_departure2.configure(compound='left')
        self.Label_departure2.configure(disabledforeground="#a3a3a3")
        self.Label_departure2.configure(foreground="#000000")
        self.Label_departure2.configure(highlightbackground="#d9d9d9")
        self.Label_departure2.configure(highlightcolor="black")
        self.Label_departure2.configure(text='''XX > XXX''')

        self.Label_price2 = tk.Label(self.top)
        self.Label_price2.place(relx=0.538, rely=0.32, height=21, width=44)
        self.Label_price2.configure(activebackground="#f9f9f9")
        self.Label_price2.configure(activeforeground="black")
        self.Label_price2.configure(background="#e4e4e4")
        self.Label_price2.configure(compound='left')
        self.Label_price2.configure(disabledforeground="#a3a3a3")
        self.Label_price2.configure(foreground="#000000")
        self.Label_price2.configure(highlightbackground="#d9d9d9")
        self.Label_price2.configure(highlightcolor="black")
        self.Label_price2.configure(text='''0000''')

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.769, rely=0.32, height=24, width=67)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#eb0214")
        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#ffffff")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Cancel''')

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.769, rely=0.229, height=24, width=67)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#b3ff66")
        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Success''')

def start_up():
    GUI_support.main()

if __name__ == '__main__':
    GUI_support.main()





